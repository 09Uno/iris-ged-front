# Stage 1: Build Angular application
FROM node:20-alpine AS build
WORKDIR /app

# First install dependencies (better caching)
COPY package.json package-lock.json ./
RUN npm ci --legacy-peer-deps

# Copy all other files
COPY . .

# Build with production configuration
RUN npm run build -- --configuration=production

# Stage 2: Serve with Nginx
FROM nginx:alpine

# Remove default config
RUN rm -rf /etc/nginx/conf.d/default.conf

# Use embedded config (no need for external file)
RUN echo "server { \
    listen 80; \
    server_name localhost; \
    location / { \
        root /usr/share/nginx/html; \
        index index.html index.htm; \
        try_files \$uri \$uri/ /index.html; \
    } \
    error_page 500 502 503 504 /50x.html; \
    location = /50x.html { \
        root /usr/share/nginx/html; \
    } \
}" > /etc/nginx/conf.d/default.conf

# Copy built files
COPY --from=build /app/dist/iris-ged-front /usr/share/nginx/html

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]